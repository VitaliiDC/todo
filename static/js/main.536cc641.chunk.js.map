{"version":3,"sources":["redux/main.js","redux/store.js","components/main/item/item.jsx","components/main/main.jsx","components/main/mainContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","do","id","name","completed","main","state","action","type","value","filter","e","reducers","combineReducers","store","createStore","window","Item","props","className","htmlFor","setDo","nameIn","onChange","target","checked","setCompleted","Main","index","length","input","useRef","doMap","map","completedMap","useState","add","setAdd","hide","addTask","current","trim","addDo","ref","onBlur","setTimeout","onKeyDown","code","keyDown","onClick","focus","mapDispatch","connect","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAAMA,EAAe,CACjBC,GAAI,CAAC,CAACC,GAAI,EAAGC,KAAM,aACnBC,UAAW,IAgBAC,EAbF,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC3C,OAAOA,EAAOC,MACV,IAAK,KAAM,OAAO,2BAAIF,GAAX,IAAkBL,GAAG,GAAD,mBAAMK,EAAML,IAAZ,CAAgBM,EAAOE,QAAQL,UAAWE,EAAMF,UAAUM,QAAO,SAAAC,GAAC,OAAIA,EAAET,KAAOK,EAAOE,MAAMP,QAC3H,IAAK,YAAa,OAAO,2BAAII,GAAX,IAAkBF,UAAU,GAAD,mBAAME,EAAMF,WAAZ,CAAuBG,EAAOE,QAAQR,GAAIK,EAAML,GAAGS,QAAO,SAAAC,GAAC,OAAIA,EAAET,KAAOK,EAAOE,MAAMP,QAClI,IAAK,QAAS,OAAO,2BAAII,GAAX,IAAkBL,GAAG,GAAD,mBAAMK,EAAML,IAAZ,CAAgBM,EAAOE,UACzD,QAAS,OAAOH,ICPlBM,EAAWC,YAAgB,CAACR,SAE5BS,EAAQC,YAAYH,GAEXE,IAEfE,OAAOF,MAAQA,E,YCEAG,EATF,SAAAC,GACT,OACI,qBAAIC,UAAU,aAAd,UACI,uBAAOC,QAAO,mBAAcF,EAAMhB,IAAMiB,UAAS,qBAAgBD,EAAMG,OAAN,aAAjE,SAAgGH,EAAMI,SACtG,uBAAOC,SAAU,SAAAZ,GAAC,OAAIA,EAAEa,OAAOC,QAAUP,EAAMQ,aAAa,CAACxB,GAAIgB,EAAMhB,GAAIC,KAAMe,EAAMI,SAAWJ,EAAMG,MAAM,CAACnB,GAAIgB,EAAMhB,GAAIC,KAAMe,EAAMI,UAAUpB,GAAE,mBAAcgB,EAAMhB,IAAMiB,UAAU,iBAAiBX,KAAK,WAAWiB,UAAWP,EAAMG,YC+DxOM,EAlEF,SAACT,GAEV,IAAIU,EAAQV,EAAMjB,GAAG4B,OAASX,EAAMd,UAAUyB,OAGxCC,EAAQC,iBAAO,MAGfC,EAAQd,EAAMjB,GAAGgC,KAAI,SAAAtB,GAAC,OAAI,cAAC,EAAD,CAAiBT,GAAIS,EAAET,GAAIoB,OAAQX,EAAER,KAAMuB,aAAcR,EAAMQ,cAApDf,EAAET,OACvCgC,EAAehB,EAAMd,UAAU6B,KAAI,SAAAtB,GAAC,OAAI,cAAC,EAAD,CAAiBT,GAAIS,EAAET,GAAIoB,OAAQX,EAAER,KAAMkB,MAAOH,EAAMG,OAA7CV,EAAET,OATvC,EAYEiC,oBAAS,GAZX,mBAYbC,EAZa,KAYRC,EAZQ,KAuBdC,EAAO,WACTD,GAAO,IAILE,EAAU,SAACT,GACoB,IAA9BA,EAAMU,QAAQ/B,MAAMgC,SACnBvB,EAAMwB,MAAM,CAACxC,GAAI0B,EAAOzB,KAAM2B,EAAMU,QAAQ/B,QAC5CqB,EAAMU,QAAQ/B,MAAQ,KAW9B,OACI,qBAAKU,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,uBACA,uBACA,qBAAKA,UAAU,cAAf,SACI,qBAAIA,UAAU,aAAd,UACKa,EACAE,OAGT,qBAAKf,UAAU,cAAf,SACI,sBAAKA,UAAS,iBAAYiB,GAAO,QAAjC,UACI,uBAAO5B,KAAK,OAAOmC,IAAKb,EAAOc,OAAQ,kBAAMC,WAAWP,EAAM,MAAMQ,UAAW,SAAAnC,GAAC,OApBxF,SAACA,EAAGmB,GACF,UAAXnB,EAAEoC,MACDR,EAAQT,GAkB4FkB,CAAQrC,EAAGmB,MAC/F,wBAAQmB,QAAS,kBAAMb,EAAMG,EAAQT,IAzCzDO,GAAO,QACPQ,YAAW,WACPf,EAAMU,QAAQU,UACf,OAsCiB,SAAsD,mBAAG/B,UAAU,+BC3CzFgC,G,MAAc,CAAC9B,MJHA,SAACZ,GAAD,MAAY,CAACD,KAAM,KAAMC,UIGlBiB,aJFA,SAACjB,GAAD,MAAY,CAACD,KAAM,YAAaC,UIElBiC,MJDrB,SAACjC,GAAD,MAAY,CAACD,KAAM,QAASC,YIGlC2C,eATE,SAAC9C,GACd,MAAQ,CACJL,GAAIK,EAAMD,KAAKJ,GACfG,UAAWE,EAAMD,KAAKD,aAMG+C,EAAlBC,EAbF,SAAClC,GACV,OAAO,cAAC,EAAD,eAAeA,OCaXmC,EAdH,WACV,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUvC,MAAOA,EAAjB,SACE,qBAAKK,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOmC,KAAK,IAAIC,UAAW5B,aCAxB6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.536cc641.chunk.js","sourcesContent":["const initialState = {\r\n    do: [{id: 0, name: 'Buy food'}],\r\n    completed: []\r\n}\r\n\r\nconst main = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'do': return {...state, do: [...state.do, action.value], completed: state.completed.filter(e => e.id !== action.value.id)}\r\n        case 'completed': return {...state, completed: [...state.completed, action.value], do: state.do.filter(e => e.id !== action.value.id)}\r\n        case 'adddo': return {...state, do: [...state.do, action.value]}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setDo = (value) => ({type: 'do', value})\r\nexport const setCompleted = (value) => ({type: 'completed', value})\r\nexport const addDo = (value) => ({type: 'adddo', value})\r\n\r\nexport default main\r\n","import {createStore, combineReducers} from 'redux'\r\nimport main from './main'\r\n\r\nconst reducers = combineReducers({main})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\nwindow.store = store","import React from 'react'\r\n\r\nconst Item = props => {\r\n    return (\r\n        <li className=\"main__item\">\r\n            <label htmlFor={`checkbox-${props.id}`} className={`main__name ${props.setDo && `completed`}`}>{props.nameIn}</label>\r\n            <input onChange={e => e.target.checked ? props.setCompleted({id: props.id, name: props.nameIn}) : props.setDo({id: props.id, name: props.nameIn})} id={`checkbox-${props.id}`} className=\"main__checkbox\" type=\"checkbox\" checked={!!props.setDo} />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Item","import React, {useRef, useState} from 'react'\r\nimport Item from './item/item'\r\n\r\nconst Main = (props) => {\r\n\r\n    let index = props.do.length + props.completed.length // last id\r\n\r\n    // REFS\r\n    const input = useRef(null)\r\n\r\n    // MAPS\r\n    const doMap = props.do.map(e => <Item key={e.id} id={e.id} nameIn={e.name} setCompleted={props.setCompleted} />)\r\n    const completedMap = props.completed.map(e => <Item key={e.id} id={e.id} nameIn={e.name} setDo={props.setDo} />)\r\n\r\n    // STATE\r\n    const [add, setAdd] = useState(false)\r\n\r\n    // SHOW HIDDEN INPUT\r\n    const show = () => {\r\n        setAdd(true)\r\n        setTimeout(() => {\r\n            input.current.focus()\r\n        }, 300)\r\n    }\r\n\r\n    // HIDE INPUT\r\n    const hide = () => {\r\n        setAdd(false)\r\n    }\r\n\r\n    // ADD TASK\r\n    const addTask = (input) => {\r\n        if(input.current.value.trim() != ''){\r\n            props.addDo({id: index, name: input.current.value})\r\n            input.current.value = ''\r\n        }\r\n    }\r\n\r\n    // ON KEY DOWN\r\n    const keyDown = (e, input) => {\r\n        if(e.code === 'Enter'){\r\n            addTask(input)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n                <div className=\"main__body\">\r\n                    <div className=\"main__title\">All Tasks</div>\r\n                    <hr/>\r\n                    <div className=\"main__tasks\">\r\n                        <ul className=\"main__list\">\r\n                            {doMap}\r\n                            {completedMap}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"main__input\">\r\n                        <div className={`d-flex ${add && 'long'}`}>\r\n                            <input type=\"text\" ref={input} onBlur={() => setTimeout(hide, 300)} onKeyDown={e => keyDown(e, input)} />\r\n                            <button onClick={() => add ? addTask(input) : show()}><i className=\"fas fa-plus\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Component from './main'\r\nimport {setDo, setCompleted, addDo} from './../../redux/main'\r\nimport './main.css'\r\n\r\nconst Main = (props) => {\r\n    return <Component {...props} />\r\n}\r\n\r\nconst mapState = (state) => {\r\n    return ({\r\n        do: state.main.do,\r\n        completed: state.main.completed\r\n    })\r\n}\r\n\r\nconst mapDispatch = {setDo, setCompleted, addDo}\r\n\r\nexport default connect(mapState, mapDispatch)(Main)","import './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\nimport Main from './components/main/mainContainer'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" component={Main} />\n          </Switch>\n        </div>\n      </Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}